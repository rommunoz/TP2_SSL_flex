//los parentesis dejo que se manden como un token mas
//operadores que son 1 char dejo que vayan solos como caracteres
//var tiene su token pero solo muestro lexema, salir equivale a FDT. fue la forma que se me ocurrio identificarlas

//Pendiente 
//TODO: DUDA: esta bien hacer asi la negacion de mi alfabeto??? con 1 car fuera basta para que matchee y desp acepta hasta un \n o \r */
//Decision final: que las reglas errores o no mostrables solo hagan un printf especifico y se morfen el token, (no lo devuelven y no existiría en mi enum)
    descartadisimo: 1- un flag en tokens.h y las reglas me lo setean si es mostrable, en main evalúo; y 2- buffer auxiliar mio donde copio el yytext y muestro esa variable siempre en el main. Pedorrisimo, ineficiente.

//TODO: NOTAS: hacer un top down: 
    cuantos tokens devuelvo a mano: 
        identificador y su lexema, 
        numero y su literal (se arma un float con o sin exponente y enteros )                // despues se lo implementa como double pero no me interesa todavia
        palabraReservadas, (2)
        operadoresde +1 caracter (4)
        \n //RETORNO token NL
        operadores de 1 caracter(5)
        (2) los parentesis pertenecen a mi alfabeto
    no devuelvo token, pero muestro su lexema cpte.:
        CADENA INVALIDA
        NUMERO INVALIDO
        ID INVALIDO
    cuantos automatico:
        EOF (1)
        caracteres sueltos
        // espacios son ignorados en main o en el mismo yylex

//no uso pero tal vez despues:
operadorAsign =[+/*-]?
operador {operadorArit}|{operadorAsign} 